kind: pipeline
type: kubernetes
name: default

workspace:
  path: /drone/src

steps:
  - name: build-cache
    image: node:lts-alpine
    commands:
      - "yarn install -W"
  - name: lint
    image: node:lts-alpine
    commands:
      - "yarn lint:website"
      - "yarn lint:server"
  - name: build-website
    image: node:lts-alpine
    commands:
      - "yarn workspace @devpunk/website build"
  - name: build-server
    image: node:lts-alpine
    commands:
      - "yarn workspace @devpunk/server build"
  - name: build-image
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: reezpatel/devpunk
      tags:
        - latest
        - ${DRONE_COMMIT:0:8}
  - name: deploy
    image: alpine/helm:3.2.1
    environment:
      KUBECONFIG:
        from_secret: KUBECONFIG
      MONGODB_PASSWORD:
        from_secret: MONGODB_PASSWORD
      MONGODB_USERNAME:
        from_secret: MONGODB_USERNAME
      MONGODB_HOST:
        from_secret: MONGODB_HOST
      GITHUB_LOGIN_CLIENT_ID:
        from_secret: GITHUB_LOGIN_CLIENT_ID
      GITHUB_LOGIN_CLIENT_SECRET:
        from_secret: GITHUB_LOGIN_CLIENT_SECRET
    commands:
      - echo "$KUBECONFIG" > kubeconfig.b64
      - export KUBECONFIG="$PWD/kubeconfig.yml"
      - base64 -d kubeconfig.b64 > kubeconfig.yml
      - helm repo add mychart https://reezpatel.github.io/helm_charts/
      - helm upgrade --wait devpunk mychart/devpunk -n devpunk -f helm.values.yml --set-string image.tag="${DRONE_COMMIT_SHA:0:8}" --set-string env.MONGODB_PASSWORD="$MONGODB_PASSWORD" --set-string env.MONGODB_USERNAME="$MONGODB_USERNAME" --set-string env.MONGODB_HOST="$MONGODB_HOST" --set-string env.GITHUB_LOGIN_CLIENT_ID="$GITHUB_LOGIN_CLIENT_SECRET" --set-string env.GITHUB_LOGIN_CLIENT_SECRET= "$GITHUB_LOGIN_CLIENT_SECRET"
    # when:
    #   event:
    #     - promote
    #   target:
    #     - production

trigger:
  branch:
    - master
    - ci-integration
  event:
    - push
